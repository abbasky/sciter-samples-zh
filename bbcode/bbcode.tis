namespace BBCode {

  var token_match = /\{[A-Z_]+[0-9]*\}/ig;
  // regular expressions for the different bbcode tokens
  var tokens = {
    //"URL" : "\\s*((?:[a-zA-Z]+:\\/\\/)?(?:[a-zA-Z]:)?(?:[\\da-z\.-]+)\\.(?:[a-z\\.]{2,6})(?:[\\/\\w \\.-]*)*\\/?)\\s*",
    "URL": "\\s*(.*?)\\s*",
    "LINK" : "\\s*([a-z0-9\-\./]+[^\"\' ]*)\\s*",
    "EMAIL" : "((?:[a-z0-9_\\.-]+)@(?:[\\da-z\\.-]+)\\.(?:[a-z\\.]{2,6}))",
    "TEXT" : "([\\s\\S]*?)",
    "SIMPLETEXT" : "([a-zA-Z0-9-+.,_ ]+)",
    "INTTEXT" : "([a-zA-Z0-9-+,_. ]+)",
    "IDENTIFIER" : "([a-zA-Z0-9-_]+)",
    "COLOR" : "\"?([a-z]+|\#[0-9abcdef]+)\"?\\s*",
    "NUMBER" : "\"?([.0-9]+)\"?\\s*"
  };
  var bbcode_Inited = false;
  var bbcode_matches = [];        // matches for bbcode to html
  var html_tpls = [];             // html templates for html to bbcode
  var html_matches = [];          // matches for html to bbcode
  var bbcode_tpls = [];           // bbcode templates for bbcode to html

  /**
   * Quote regular expression characters plus an optional character
   * taken from phpjs.org
   */
  function preg_quote(str, delimiter = "") {
    return (str + "").replace(new RegExp("[.\\\\+*?\\[\\^\\]$(){}=!<>|:\\" + (delimiter || "") + "-]", "g"), "\\$&");
  }
  
  /**
   * Turns a bbcode into a regular rexpression by changing the tokens into
   * their regex form
   */
  function _getRegEx(str) {
    var matches = str.match(token_match);
    var nrmatches = matches ? matches.length : 0;
    if (nrmatches <= 0) 
      return new RegExp(preg_quote(str), "g");        // no tokens so return the escaped string

    var i = 0;
    var replacement = "";
    for(; i < nrmatches; i += 1) {
      // Remove {, } and numbers from the token so it can match the
      // keys in tokens
      var token = matches[i].replace(/[{}0-9]/g, "");
      if (tokens[token]) {
        // Escape everything before the token
        replacement += preg_quote(str.substr(0, str.indexOf(matches[i]))) + tokens[token];
        // Remove everything before the end of the token so it can be used
        // with the next token. Doing this so that parts can be escaped
        str = str.substr(str.indexOf(matches[i]) + matches[i].length);
      }
    }
    replacement += preg_quote(str);      // add whatever is left to the string
    return new RegExp(replacement, "gi");
  };

  /**
   * Turns a bbcode template into the replacement form used in regular expressions
   * by turning the tokens in $1, $2, etc.
   */
  function _getTpls(str) {
    var matches = str.match(token_match);
    var nrmatches = matches ? matches.length : 0;
    if (nrmatches <= 0) 
      return str;       // no tokens so return the string

    var i = 0;
    var replacement = "";
    var positions = {};
    var next_position = 0;
    for(; i < nrmatches; i += 1) {
      // Remove {, } and numbers from the token so it can match the
      // keys in tokens
      var token = matches[i].replace(/[{}0-9]/g, "");
      var position;
      // figure out what $# to use ($1, $2)
      if (positions[matches[i]]) {
        position = positions[matches[i]];         // if the token already has a position then use that
      } else {
        // token doesn't have a position so increment the next position
        // and record this token's position
        next_position += 1;
        position = next_position;
        positions[matches[i]] = position;
      }
      if (tokens[token]) {
        replacement += str.substr(0, str.indexOf(matches[i])) + "$" + position;
        str = str.substr(str.indexOf(matches[i]) + matches[i].length);
      }
    }
    replacement += str;
    return replacement;
  };

  /**
   * Adds a bbcode to the list
   */
  function add(bbcode_match, bbcode_tpl) {
    // add the regular expressions and templates for bbcode to html
    bbcode_matches.push(_getRegEx(bbcode_match));
    html_tpls.push(_getTpls(bbcode_tpl));
    // add the regular expressions and templates for html to bbcode
    html_matches.push(_getRegEx(bbcode_tpl));
    bbcode_tpls.push(_getTpls(bbcode_match));
  };

  /**
   * Turns all of the added bbcodes into html
   */
  function toHtml(str) {
    str = str.htmlEscape();
    var nrbbcmatches = bbcode_matches.length;
    var i = 0;
    for(; i < nrbbcmatches; i += 1) {
      if (bbcode_matches[i])
      str = str.replace(bbcode_matches[i], html_tpls[i]);
    }
      
    return str;
  };

  /**
   * Turns html into bbcode
   */
  function toBBCode(str) {
    var nrhtmlmatches = html_matches.length;
    var i = 0;
    for(; i < nrhtmlmatches; i += 1) 
      str = str.replace(html_matches[i], bbcode_tpls[i]);
    return str;
  };
} 

if (!BBCode.bbcode_Inited) {
  BBCode.bbcode_Inited = true;
  // adds BBCodes and their HTML
  BBCode.add("[b]{TEXT}[/b]", "<strong>{TEXT}</strong>");
  BBCode.add("[i]{TEXT}[/i]", "<em>{TEXT}</em>");
  BBCode.add("[u]{TEXT}[/u]", "<span style=\"text-decoration:underline;\">{TEXT}</span>");
  BBCode.add("[s]{TEXT}[/s]", "<span style=\"text-decoration:line-through;\">{TEXT}</span>");
  BBCode.add("[url={URL}]{TEXT}[/url]", "<a href=\"{URL}\" target=\"_blank\">{TEXT}</a>");
  BBCode.add("[url]{URL}[/url]", "<a href=\"{URL}\" target=\"_blank\">{URL}</a>");
  BBCode.add("[img={URL} width={NUMBER1} height={NUMBER2}]{TEXT}[/img]", "<img src=\"{URL}\" width=\"{NUMBER1}\" height=\"{NUMBER2}\" alt=\"{TEXT}\" />");
  BBCode.add("[img]{URL}[/img]", "<img src=\"{URL}\" alt=\"{URL}\" />");
  BBCode.add("[img={LINK} width={NUMBER1} height={NUMBER2}]{TEXT}[/img]", "<img src=\"{LINK}\" width=\"{NUMBER1}\" height=\"{NUMBER2}\" alt=\"{TEXT}\" />");
  BBCode.add("[img]{LINK}[/img]", "<img src=\"{LINK}\" alt=\"{LINK}\" />");
  BBCode.add("[color={COLOR}]{TEXT}[/color]", "<span style=\"color:{COLOR};\">{TEXT}</span>");
  BBCode.add("[highlight={COLOR}]{TEXT}[/highlight]", "<span style=\"background-color:{COLOR};\">{TEXT}</span>");
  BBCode.add("[quote=\"{TEXT1}\"]{TEXT2}[/quote]", "<div class=\"quote\"><cite>{TEXT1}</cite><p>{TEXT2}</p></div>");
  BBCode.add("[quote]{TEXT}[/quote]", "<cite>{TEXT}</cite>");
  //BBCode.add("[code]{TEXT}[/code]", "<pre>{TEXT}</pre>");
  BBCode.add("[blockquote]{TEXT}[/blockquote]", "<blockquote>{TEXT}</blockquote>");  
  BBCode.add("[size={NUMBER}]{TEXT}[/size]", "<span style=\"font-size:{NUMBER};\">{TEXT}</span>"); 
  BBCode.add("[br]", "<br/>");  
  BBCode.add("[hr]", "<hr/>");  
}

