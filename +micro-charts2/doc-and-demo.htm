<html>
  <head>
    <title></title>
    <style>
    
      @import url(micro-chart.css);
      
      #updating { width:64dip; }
      
      
      svg.chart.custom1 { 
        aspect: MicroChart.Donut( fill: red gold, thickness:0.2 )
                url(micro-chart.tis);
        size:64dip;
      }
      
      svg.chart.custom2 { 
        aspect: MicroChart.Donut( fill: red gold green, thickness:0.4 )
                url(micro-chart.tis);
        size:96dip;
      }
      
      svg.chart.custom3 { 
        aspect: MicroChart.Bar( fill: red gold green blue )
                url(micro-chart.tis);
        size:100dip 32dip;
      }
      
      svg.chart.custom4 { 
        aspect: MicroChart.Line( fill: gold, stroke: red, stroke-width:3px )
                url(micro-chart.tis);
        size:200dip 64dip;
      }    
    </style>
    <script type="text/tiscript">
    
    $(#updating).timer(1s, function() {
      var random = rand(10);
      var values = this.value;
      values.shift();
      values.push(random);
      this.value = values;
      return true;
    });
    
    
    </script>
  </head>
<body>

  <h1>Micro charts</h1>
  
  <p>该图表是作为切面(aspects)来实现的，即它是附加到&lt;svg&gt;元素上。</p>

  <section>
    <h2>饼图(Pie)</h2>
    
    <pre>&lt;svg.chart.pie value="..." /&gt;</pre>
    
    <p><code>value</code>属性的格式:</p>
    <ol>
      <li><code>3/8</code> - "/"分隔符的含义相等于分号，比如这里是"3分之8"，仅有前两个值才是有意义的，才会被画出来;</li>
      <li><code>3,6,8,9</code> - 所有的值都被包含在图表中，总计值是所有值的合集。</li>
    </ol>
    
    <p>脚本: <code>elChart.value = [num1,num2,num3,...];</code> - 一个值数组</p>
    
    <p>示例:  
      <svg.chart.pie value="0/8" />
      <svg.chart.pie value="1/8" />
      <svg.chart.pie value="3/8" />
      <svg.chart.pie value="5/8" />
      <svg.chart.pie value="7/8" />
      <svg.chart.pie value="8/8" />
    </p>
    HTML代码:
    <pre>      &lt;svg.chart.pie value="0/8" /&gt;
      &lt;svg.chart.pie value="1/8" /&gt;
      &lt;svg.chart.pie value="3/8" /&gt;
      &lt;svg.chart.pie value="5/8" /&gt;
      &lt;svg.chart.pie value="7/8" /&gt;
      &lt;svg.chart.pie value="8/8" /&gt;</pre>
  </section>
  
  <section>
    <h2>圆环图</h2>

    <pre>&lt;svg.chart.donut value="..." /&gt;</pre>
    
    <p><code>value</code>属性的格式:</p>
    <ol>
      <li><code>3/8</code> - "/"分隔符的含义相等于分号，比如这里是"3分之8"，仅有前两个值才是有意义的，才会被画出来;</li>
      <li><code>3,6,8,9</code> - 所有的值都被包含在图表中，总计值是所有值的合集。</li>
    </ol>
    
    <p>脚本: <code>elChart.value = [num1,num2,num3,...];</code> - 一个值数组</p>

    <p>示例:  
      <svg.chart.donut value="0/8" />
      <svg.chart.donut value="1/8" />
      <svg.chart.donut value="3/8" />
      <svg.chart.donut value="5/8" />
      <svg.chart.donut value="7/8" />
      <svg.chart.donut value="8/8" />
    </p>
    HTML代码:
    <pre>      &lt;svg.chart.donut value="0/8" /&gt;
      &lt;svg.chart.donut value="1/8" /&gt;
      &lt;svg.chart.donut value="3/8" /&gt;
      &lt;svg.chart.donut value="5/8" /&gt;
      &lt;svg.chart.donut value="7/8" /&gt;
      &lt;svg.chart.donut value="8/8" /&gt;</pre>
  </section>
  
  <section>
    <h2>线图</h2>

    <pre>&lt;svg.chart.line value="..." /&gt;</pre>
    
    <p><code>value</code>属性的格式: 以逗号分隔的值列表。</p>
    <p>脚本: <code>elChart.value = [num1,num2,num3,...];</code> - 一个值数组</p>
  
    <p>示例:
      <svg.chart.line value="5,3,9,6,5,9,7,3,5,2" />
      <svg.chart.line value="5,3,2,-1,-3,-2,2,3,5,2" />
      <svg.chart.line value="0,-3,-6,-4,-5,-4,-7,-3,-5,-2" />
    </p>
    HTML代码:
    <pre>      &lt;svg.chart.line value="5,3,9,6,5,9,7,3,5,2" /&gt;
      &lt;svg.chart.line value="5,3,2,-1,-3,-2,2,3,5,2" /&gt;
      &lt;svg.chart.line value="0,-3,-6,-4,-5,-4,-7,-3,-5,-2" /&gt;</pre>
  </section>

  <section>
    <h2>柱状图</h2>

    <pre>&lt;svg.chart.bar value="..." /&gt;</pre>
    
    <p><code>value</code>属性的格式: 以逗号分隔的值列表。</p>
    <p>脚本: <code>elChart.value = [num1,num2,num3,...];</code> - 一个值数组</p>
  
    <p>示例:
      <svg.chart.bar value="5,3,9,6,5,9,7,3,5,2" />
      <svg.chart.bar value="5,3,2,-1,-3,-2,2,3,5,2" />
      <svg.chart.bar value="0,-3,-6,-4,-5,-4,-7,-3,-5,-2" />
    </p>
    HTML代码:
    <pre>      &lt;svg.chart.bar value="5,3,9,6,5,9,7,3,5,2" /&gt;
      &lt;svg.chart.bar value="5,3,2,-1,-3,-2,2,3,5,2" /&gt;
      &lt;svg.chart.bar value="0,-3,-6,-4,-5,-4,-7,-3,-5,-2" /&gt;</pre>
  </section>

  <section>
    <h2>运行期更新的图表</h2>
    <p>要更新图表，则只需要在脚本里给<code>value</code>属性赋一个新的数组即可。</p>
    <p>
    示例: <svg.chart.line #updating value="5,3,9,6,5,9,7,3,5,2,5,3,9,6,5,9,7,3,5,2" />
    </p>
    下面的代码每秒中更新一次图表:
    <pre>  $(#updating).timer(1s, function() {
    var random = rand(10);
    var values = this.value;
    values.shift();
    values.push(random);
    this.value = values;
    return true;
  });</pre>
  </section>
  
  <section>
  <h2>自定义图表样式</h2>
  
  <p>图表可以通过aspect参数来样式化, 例如下面的这个图表:</p>
  <pre>  svg.chart.custom4 { 
    aspect: MicroChart.Line( fill: gold, stroke: red, stroke-width:3px )
            url(micro-chart.tis);
    size:200dip 64dip;
  }</pre>
  
  <p>
    示例: 
      <svg.chart.custom1 value="3/8" />
      <svg.chart.custom2 value="3,4,6" />
      <svg.chart.custom3 value="5,3,9,6,5,9,7,3,5,2" />
      <svg.chart.custom4 value="5,3,9,6,5,9,7,3,5,2" />
    </p>
  <section>

</body>
</html>
