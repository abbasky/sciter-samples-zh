const Lightbox = function(){

  var el_overlay = new Element(#div);
  self.$(body).append(el_overlay);

  function show(cbk_on_show, targetOrOption = null, option = null) {
    var el_body = el_overlay.$(.ligthbox-body);
    el_body.clear();
    switch(typeof cbk_on_show) {
      case #function:
        cbk_on_show(el_body, targetOrOption)
        break;
      case #Element:
        el_body.append(cbk_on_show);
        break;
      default:
        assert false: "cbk_on_show is not correct!";
    }
    if (!option) {
      if (targetOrOption && (typeof targetOrOption == #object))
        option = targetOrOption;
      else
        option = { shadow: false, closeOuter: true };
    }
    if (option.shadow) el_body.@.addClass("shadow");
    if (option.closeOuter) el_overlay.$(.ligthbox-close).@.addClass("outer");

    self.style#overflow = "hidden";
    el_overlay.@.addClass("show");
    el_overlay.style#visibility = "visible";
  }

  function close(){
    el_overlay.@.removeClass("show");
    el_overlay.timer(300, function() {
      el_overlay.style#visibility = "none";
    });
  }
  
  function setup(selector, cbk_on_show){
    self.on("click", selector, function(evt) {
      assert(evt.target.$is({selector}));
      Lightbox.show(cbk_on_show, evt.target, { shadow: true, closeOuter: true });
    });
  }
  
  el_overlay.@.addClass("ligthbox-overlay");
  el_overlay.style#visibility = "none";
  el_overlay.html = "<div .ligthbox><div .ligthbox-body></div><div .ligthbox-close role=\"ligthbox-close\">r</div></div>";

  el_overlay.$(.ligthbox-close).on("click", close);
  el_overlay.on("click", function(evt) {
    if(evt.target==el_overlay || evt.target.$is([role=ligthbox-close]))
      close();
  });
  
  return {
    setup : setup,
    show  : show,
    close : close
  };
}();